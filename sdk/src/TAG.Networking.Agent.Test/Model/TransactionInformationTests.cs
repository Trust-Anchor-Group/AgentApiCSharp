/*
 * Agent API
 *
 * The Neuron® publishes an Agent API that can be used by agents that do not wish to, or are able to, connect to the Neuron® via any of the XMPP bindings available, such as standard binary  socket, websocket or Synchronous HTTP (BOSH). Via the Agent API, the agent is permitted to do  basic tasks, such as send messages, create Agent IDs, and sign contracts with such Agent IDs.  The Full API is 
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using TAG.Networking.Agent.Model;
using TAG.Networking.Agent.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace TAG.Networking.Agent.Test.Model
{
    /// <summary>
    ///  Class for testing TransactionInformation
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TransactionInformationTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TransactionInformation
        //private TransactionInformation instance;

        public TransactionInformationTests()
        {
            // TODO uncomment below to create an instance of TransactionInformation
            //instance = new TransactionInformation();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TransactionInformation
        /// </summary>
        [Fact]
        public void TransactionInformationInstanceTest()
        {
            // TODO uncomment below to test "IsType" TransactionInformation
            //Assert.IsType<TransactionInformation>(instance);
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'State'
        /// </summary>
        [Fact]
        public void StateTest()
        {
            // TODO unit test for the property 'State'
        }

        /// <summary>
        /// Test the property 'Started'
        /// </summary>
        [Fact]
        public void StartedTest()
        {
            // TODO unit test for the property 'Started'
        }

        /// <summary>
        /// Test the property 'Ended'
        /// </summary>
        [Fact]
        public void EndedTest()
        {
            // TODO unit test for the property 'Ended'
        }

        /// <summary>
        /// Test the property 'ServiceId'
        /// </summary>
        [Fact]
        public void ServiceIdTest()
        {
            // TODO unit test for the property 'ServiceId'
        }

        /// <summary>
        /// Test the property 'ServiceProvider'
        /// </summary>
        [Fact]
        public void ServiceProviderTest()
        {
            // TODO unit test for the property 'ServiceProvider'
        }

        /// <summary>
        /// Test the property 'Amount'
        /// </summary>
        [Fact]
        public void AmountTest()
        {
            // TODO unit test for the property 'Amount'
        }

        /// <summary>
        /// Test the property 'Currency'
        /// </summary>
        [Fact]
        public void CurrencyTest()
        {
            // TODO unit test for the property 'Currency'
        }

        /// <summary>
        /// Test the property 'SuccessUrl'
        /// </summary>
        [Fact]
        public void SuccessUrlTest()
        {
            // TODO unit test for the property 'SuccessUrl'
        }

        /// <summary>
        /// Test the property 'FailureUrl'
        /// </summary>
        [Fact]
        public void FailureUrlTest()
        {
            // TODO unit test for the property 'FailureUrl'
        }

        /// <summary>
        /// Test the property 'CancelUrl'
        /// </summary>
        [Fact]
        public void CancelUrlTest()
        {
            // TODO unit test for the property 'CancelUrl'
        }

        /// <summary>
        /// Test the property 'ClientUrl'
        /// </summary>
        [Fact]
        public void ClientUrlTest()
        {
            // TODO unit test for the property 'ClientUrl'
        }
    }
}
