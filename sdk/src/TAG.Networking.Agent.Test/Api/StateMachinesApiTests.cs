/*
 * Agent API
 *
 * The Neuron® publishes an Agent API that can be used by agents that do not wish to, or are able to, connect to the Neuron® via any of the XMPP bindings available, such as standard binary  socket, websocket or Synchronous HTTP (BOSH). Via the Agent API, the agent is permitted to do  basic tasks, such as send messages, create Agent IDs, and sign contracts with such Agent IDs.  The Full API is 
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using TAG.Networking.Agent.Client;
using TAG.Networking.Agent.Api;
// uncomment below to import models
//using TAG.Networking.Agent.Model;

namespace TAG.Networking.Agent.Test.Api
{
    /// <summary>
    ///  Class for testing StateMachinesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class StateMachinesApiTests : IDisposable
    {
        private StateMachinesApi instance;

        public StateMachinesApiTests()
        {
            instance = new StateMachinesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of StateMachinesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' StateMachinesApi
            //Assert.IsType<StateMachinesApi>(instance);
        }

        /// <summary>
        /// Test CreateReport
        /// </summary>
        [Fact]
        public void CreateReportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateReportBody createReportBody = null;
            //var response = instance.CreateReport(createReportBody);
            //Assert.IsType<ReportResult>(response);
        }

        /// <summary>
        /// Test GetCurrentState
        /// </summary>
        [Fact]
        public void GetCurrentStateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetCurrentStateBody getCurrentStateBody = null;
            //var response = instance.GetCurrentState(getCurrentStateBody);
            //Assert.IsType<StateResult>(response);
        }
    }
}
