/*
 * Agent API
 *
 * The Neuron® publishes an Agent API that can be used by agents that do not wish to, or are able to, connect to the Neuron® via any of the XMPP bindings available, such as standard binary  socket, websocket or Synchronous HTTP (BOSH). Via the Agent API, the agent is permitted to do  basic tasks, such as send messages, create Agent IDs, and sign contracts with such Agent IDs.  The Full API is 
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Neuron.Agent.Client.OpenAPIDateConverter;

namespace Neuron.Agent.Model
{
    /// <summary>
    /// Format of report.
    /// </summary>
    /// <value>Format of report.</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ReportFormat
    {
        /// <summary>
        /// Enum Html for value: Html
        /// </summary>
        [EnumMember(Value = "Html")]
        Html = 1,

        /// <summary>
        /// Enum Text for value: Text
        /// </summary>
        [EnumMember(Value = "Text")]
        Text = 2,

        /// <summary>
        /// Enum Xml for value: Xml
        /// </summary>
        [EnumMember(Value = "Xml")]
        Xml = 3,

        /// <summary>
        /// Enum Markdown for value: Markdown
        /// </summary>
        [EnumMember(Value = "Markdown")]
        Markdown = 4,

        /// <summary>
        /// Enum Xaml for value: Xaml
        /// </summary>
        [EnumMember(Value = "Xaml")]
        Xaml = 5,

        /// <summary>
        /// Enum XamarinXaml for value: XamarinXaml
        /// </summary>
        [EnumMember(Value = "XamarinXaml")]
        XamarinXaml = 6,

        /// <summary>
        /// Enum SmartContract for value: SmartContract
        /// </summary>
        [EnumMember(Value = "SmartContract")]
        SmartContract = 7
    }

}
